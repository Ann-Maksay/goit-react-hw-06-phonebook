{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reduser.js","redux/store.js","components/ContactList/ContactListStyled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["addContact","createAction","deleteContact","changeFilter","actions","items","createReducer","state","payload","find","contact","name","filter","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","ContactListWrapper","styled","div","ContactListItem","number","handleDelete","className","type","onClick","getContactList","allContacts","elem","toLowerCase","includes","connect","dispatch","onDelete","e","target","map","id","FormWrapper","INITIAL_STATE","ContactForm","handleChangeForm","value","setState","handleSubmit","preventDefault","onAdd","props","uuidv4","resetForm","this","onSubmit","pattern","title","placeholder","required","onChange","Component","FilterWrapper","setFilter","tupe","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.30e54d50.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"phonebook/add\");\r\n\r\nexport const deleteContact = createAction(\"phonebook/delete\");\r\n\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) =>\r\n    state.find((contact) => contact.name === payload.name)\r\n      ? state\r\n      : [...state, payload],\r\n\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ name }) => name !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./phonebook/phonebook-reduser\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactListWrapper = styled.div`\r\n  .contactListItem {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .contactListItem::before {\r\n    content: \"\";\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    background-color: black;\r\n    margin-right: 10px;\r\n  }\r\n  .contactListDeleteButton {\r\n    width: 80px;\r\n    height: 30px;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ name, number, handleDelete }) => {\r\n  return (\r\n    <li className=\"contactListItem\">\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        name={name}\r\n        onClick={handleDelete}\r\n        className=\"contactListDeleteButton\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { ContactListWrapper } from \"./ContactListStyled\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { deleteContact } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  const handleDelete = (e) => {\r\n    onDelete(e.target.name);\r\n  };\r\n\r\n  return (\r\n    <ContactListWrapper>\r\n      <ul className=\"contactList\">\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <ContactListItem\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              handleDelete={handleDelete}\r\n            ></ContactListItem>\r\n          );\r\n        })}\r\n      </ul>\r\n    </ContactListWrapper>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getContactList = (filter, allContacts) => {\r\n  const contactsList = allContacts.filter((elem) =>\r\n    elem.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n  return contactsList;\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getContactList(filter, items),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (name) => dispatch(deleteContact(name)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormWrapper = styled.div`\r\n  border: 1px solid black;\r\n  width: 500px;\r\n  margin-left: 20px;\r\n  margin-bottom: 30px;\r\n\r\n  .formItem {\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    margin-left: 20px;\r\n  }\r\n\r\n  .lableTitle {\r\n    margin-top: 0;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .submitButton {\r\n    margin-left: 20px;\r\n    margin-bottom: 20px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { FormWrapper } from \"./ContactFormStyled\";\r\nimport { addContact } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAdd: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChangeForm = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    onAdd({ id: uuidv4(), name, number });\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <FormWrapper>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className=\"formItem\">\r\n            <p className=\"lableTitle\">Name</p>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              placeholder=\"Name\"\r\n              required\r\n              value={name}\r\n              onChange={this.handleChangeForm}\r\n            />\r\n          </label>\r\n          <label className=\"formItem\">\r\n            <p className=\"lableTitle\">Number</p>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              placeholder=\"Phone\"\r\n              required\r\n              value={number}\r\n              onChange={this.handleChangeForm}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"submitButton\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </FormWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAdd: (contact) => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n  margin-left: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { FilterWrapper } from \"./FilterStyled\";\r\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nconst Filter = ({ setFilter, value }) => {\r\n  const handleChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <label>\r\n        Filter:\r\n        <input tupe=\"text\" value={value} onChange={handleChange}></input>\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  setFilter: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({\r\n  value: filter,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFilter: (value) => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\n\nimport ContactList from \"./ContactList/ContactList\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}